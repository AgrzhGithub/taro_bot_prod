# handlers/navigation.py
from aiogram import Router
from aiogram.types import Message
from keyboards import main_menu, theme_keyboard, spread_keyboard
from handlers.theme_spread import ThemeChoice
from aiogram.fsm.context import FSMContext

router = Router()

# --- –ö–Ω–æ–ø–∫–∞ "‚¨ÖÔ∏è –í –º–µ–Ω—é" ---
@router.message(lambda m: m.text == "‚¨ÖÔ∏è –í –º–µ–Ω—é")
async def back_to_menu(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

# --- –ö–Ω–æ–ø–∫–∞ "üîô –ù–∞–∑–∞–¥" (–≤–æ–∑–≤—Ä–∞—Ç –≤ —Ç–µ–º—É –∏–ª–∏ —Ä–∞—Å–∫–ª–∞–¥) ---
@router.message(lambda m: m.text == "üîô –ù–∞–∑–∞–¥")
async def go_back(message: Message, state: FSMContext):
    state_name = await state.get_state()
    if state_name == ThemeChoice.spread:  # –∏–∑ —Ä–∞—Å–∫–ª–∞–¥–æ–≤ ‚Üí –≤ —Ç–µ–º—ã
        await state.set_state(ThemeChoice.theme)
        await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É —Ç–µ–º—ã:", reply_markup=theme_keyboard)
    elif state_name == ThemeChoice.theme:  # –∏–∑ —Ç–µ–º ‚Üí –≤ –º–µ–Ω—é
        await state.clear()
        await message.answer("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)
    else:  # –µ—Å–ª–∏ –±–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await state.clear()
        await message.answer("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)
