from pathlib import Path
import json
import random
import asyncio
from transformers import AutoModelForCausalLM, AutoTokenizer
import torch
import re

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∫–∞—Ä—Ç–∞–º–∏
CARDS_PATH = Path(__file__).resolve().parent.parent / "data" / "tarot_cards.json"

def load_cards():
    with open(CARDS_PATH, "r", encoding="utf-8") as f:
        return json.load(f)

cards = load_cards()

def draw_cards(num):
    return random.sample(cards, num)

# –ú–æ–¥–µ–ª—å Qwen
model = None
tokenizer = None
model_name = "Qwen/Qwen2.5-0.5B-Instruct"

def load_model():
    global model, tokenizer
    if model is None or tokenizer is None:
        print("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ Qwen...")
        model = AutoModelForCausalLM.from_pretrained(
            model_name,
            torch_dtype="auto",
            device_map="auto"
        )
        tokenizer = AutoTokenizer.from_pretrained(model_name)
        print("‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

async def qwen_chat_completion(prompt: str) -> str:
    load_model()
    messages = [
        {"role": "system", "content": "–¢—ã –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥ —Å 20-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º. –û—Ç–≤–µ—á–∞–π —Ç–æ—á–Ω–æ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏."},
        {"role": "user", "content": prompt}
    ]
    text = tokenizer.apply_chat_template(messages, tokenize=False, add_generation_prompt=True)
    model_inputs = tokenizer([text], return_tensors="pt").to(model.device)

    loop = asyncio.get_event_loop()

    def do_generate():
        generated_ids = model.generate(**model_inputs, max_new_tokens=512)
        generated_ids = [
            output_ids[len(input_ids):] for input_ids, output_ids in zip(model_inputs.input_ids, generated_ids)
        ]
        return tokenizer.batch_decode(generated_ids, skip_special_tokens=True)[0]

    return await loop.run_in_executor(None, do_generate)

# –ê–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–∞
async def gpt_analyze_question(question: str):
    prompt = f"""
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥ —Å 20-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —Ç–µ–º—É –∏ —Ä–∞—Å–∫–ª–∞–¥ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "{question}"

–ü—Ä–∞–≤–∏–ª–∞:
1. –í–æ–∑–º–æ–∂–Ω—ã–µ —Ç–µ–º—ã: –ª—é–±–æ–≤—å, —Ä–∞–±–æ—Ç–∞, —Å—É–¥—å–±–∞, —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ.
2. –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã: "–¢—Ä–∏ –∫–∞—Ä—Ç—ã" (–∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏), "–ü–æ–¥–∫–æ–≤–∞" (–≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ), "–ê–ª—Ö–∏–º–∏–∫" (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–æ–π).
3. –í—ã–±–∏—Ä–∞–π —Ç–µ–º—É –∏ —Ä–∞—Å–∫–ª–∞–¥ –∏—Å—Ö–æ–¥—è –∏–∑ —Å—É—Ç–∏ –≤–æ–ø—Ä–æ—Å–∞, –∞ –Ω–µ —Å–ª—É—á–∞–π–Ω–æ.
4. –û–±—ä—è—Å–Ω–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä –≤ –æ–¥–Ω–æ–º-–¥–≤—É—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤.

–û—Ç–≤–µ—Ç —Å—Ç—Ä–æ–≥–æ –≤ JSON:
{{
  "theme": "–æ–¥–Ω–∞ –∏–∑ —Ç–µ–º",
  "spread": "–æ–¥–∏–Ω –∏–∑ —Ä–∞—Å–∫–ª–∞–¥–æ–≤",
  "reason": "–∫—Ä–∞—Ç–∫–æ–µ, –Ω–æ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞"
}}
"""
    import json as pyjson
    response_text = await qwen_chat_completion(prompt)
    match = re.search(r'\{[\s\S]*?\}', response_text)
    json_str = match.group(0) if match else "{}"

    try:
        return pyjson.loads(json_str)
    except pyjson.JSONDecodeError:
        return {"theme": "—Å—É–¥—å–±–∞", "spread": "–¢—Ä–∏ –∫–∞—Ä—Ç—ã", "reason": "–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞"}

# –¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞
async def gpt_make_prediction(question: str, theme: str, spread: str, cards_list: str):
    prompt = f"""
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥.
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å: "{question}"
–¢–µ–º–∞: {theme}
–†–∞—Å–∫–ª–∞–¥: {spread}
–ö–∞—Ä—Ç—ã: {cards_list}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã: –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∫—Ä–∞—Ç–∫–æ–µ, –Ω–æ –≥–ª—É–±–æ–∫–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤–æ–ø—Ä–æ—Å–∞.
- –ü–æ—Å–ª–µ –∫–∞—Ä—Ç: —Ü–µ–ª—å–Ω—ã–π –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏—Ç–æ–≥ —Ä–∞—Å–∫–ª–∞–¥–∞ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è).
- –ò—Ç–æ–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º –∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º, –±–µ–∑ —Å–ª–æ–≤ "—Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º", "–≤ —Ü–µ–ª–æ–º" –∏ –ª–∏—à–Ω–µ–π –≤–æ–¥—ã.
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π **–∑–≤—ë–∑–¥–æ—á–∫–∏**, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–µ–ª–∞–π –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º.

–§–æ—Ä–º–∞—Ç:
1. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã ‚Äî —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
...
–ò—Ç–æ–≥: –æ–±—â–∏–π –≤—ã–≤–æ–¥.
"""
    return await qwen_chat_completion(prompt)
